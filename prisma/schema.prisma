// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int     @id @default(autoincrement())
  email         String? @unique()
  password      String?
  teamName      String? @map("team_name")
  clientIdPhone String? @unique() @map("client_id_phone")
  clientIdBoard String? @unique() @map("client_id_board")
  role          Role
  code          String  @unique()
  isVerified    Boolean @default(false) @map("is_verified")
  points        Int     @default(0)
  gameSessionId Int     @map("game_session_id")
  boardId       Int?    @map("board_id")

  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  gameAssignment GameAssignment[]
  gameSession    GameSession      @relation(fields: [gameSessionId], references: [id])
  board          Board?           @relation(fields: [boardId], references: [id])

  @@map("users")
}

model Game {
  id    Int    @id @default(autoincrement())
  title String
  url   String
  port  Int?

  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  gameAssignment GameAssignment[]

  @@map("games")
}

model Board {
  id Int @id @default(autoincrement())

  place  Int
  ip     String  @unique
  isBusy Boolean @default(false) @map("is_busy")

  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  gameAssignment GameAssignment[]
  User           User[]

  @@map("boards")
}

model GameSession {
  id Int @id @default(autoincrement())

  title       String
  isCompleted Boolean @default(false) @map("is_completed")
  isStarted   Boolean @default(false) @map("is_started")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  gameAssignment GameAssignment[]
  user           User[]

  @@map("game_sessions")
}

model GameAssignment {
  id            Int      @id @default(autoincrement())
  gameId        Int?     @map("game_id")
  boardId       Int?     @map("board_id")
  userId        Int      @map("user_id")
  gameSessionId Int      @map("game_session_id")
  isCompleted   Boolean  @default(false) @map("is_completed")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  board       Board?      @relation(fields: [boardId], references: [id], onDelete: Cascade)
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  game        Game?       @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameSession GameSession @relation(fields: [gameSessionId], references: [id], onDelete: Cascade)

  @@map("game_assignments")
}

enum Role {
  PLAYER
  ADMIN
}
